{"version":3,"sources":["posts/actions/posts.js","index.scss","app/reducers/app.js","home/routes.js","home/reducers/config.js","home/reducers/index.js","app/reducers/config.js","posts/reducers/posts.js","readStatus/reducers/readStatus.js","app/reducers/root.js","app/actions/app.js","posts/services/posts.js","posts/sagas/posts.js","posts/sagas/index.js","app/rootSaga.js","app/store.js","app/components/Body/Body.jsx","app/components/Control/subComponents/ChangeTheme/ChangeTheme.jsx","app/components/Control/subComponents/ChangeTheme/ChangeTheme.container.js","app/components/Control/Control.jsx","app/components/Control/Control.container.js","app/routes.js","app/components/Root/Root.jsx","index.js","app/actions/config.js","home/actions/config.js","app/selectors/config.js","app/components/Loading/loading.module.scss","shared/helpers/commons.js","posts/routes.js","shared/helpers/icons.js","app/components/RouteWithSubRoutes/RouteWithSubRoutes.jsx","readStatus/actions/readStatus.js","app/conf.js","app/components/Loading/Loading.jsx","app/components/Body/body.module.scss"],"names":["GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","SET_POSTS","getPostsRequest","filters","type","payload","getPostsSuccess","data","total","getPostsFailure","err","error","setPosts","module","exports","initialState","showError","status","key","EntryPoint","lazy","innerRoutes","posts","home","path","Component","exact","fetching","currentChildRoute","title","subTitle","goBack","subtitle","combineReducers","config","state","action","CHANGE_CHILD_ROUTE","childRoute","GO_BACK","route","CHANGE_TITLE_DESCRIPTION","version","theme","arr","persistConfig","storage","blacklist","whitelist","rootReducer","app","SET_VERSION","SET_THEME","readStatus","IS_READEN","persistReducer","getPosts","axios","method","url","redditDomain","makeQuery","headers","notCachedResponse","getPostsWorker","call","children","put","showGlobalError","takeLatest","all","sagas","createSagaMiddleware","store","createStore","persistedRootReducer","compose","composeWithDevTools","applyMiddleware","run","rootSaga","persistedStore","persistStore","memo","className","styles","Body","useEffect","document","body","setAttribute","mapStateToProps","createStructuredSelector","themeSelector","connect","ChangeTheme","Control","withRouter","history","currentVersion","versionSelector","mapDispatchToProps","setVersion","routes","Root","loading","persistor","fallback","Loading","map","index","RouteWithSubRoutes","ReactDOM","render","getElementById","setThemeWeb","changeConfigChildRoute","changeHomeTitleAndDescription","createSelector","scrolly","event","element","target","scrollHeight","Math","ceil","scrollTop","clientHeight","Object","keys","reduce","a","k","push","encodeURIComponent","toString","trim","join","buildArrayLength","length","l","PostsLoader","defaultPath","icon","plural","renderProps","postIsReaden","id","defaultPage","defaultLimit","wrapper","loader"],"mappings":"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","file":"static/js/main.04fbaece.chunk.js","sourcesContent":["export const GET_POSTS_REQUEST = 'GET_POSTS_REQUEST';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\nexport const SET_POSTS = 'SET_POSTS';\n\n\nexport const getPostsRequest = (filters = {}) => ({\n    type: GET_POSTS_REQUEST,\n    payload: {\n        filters\n    }\n});\n\nexport const getPostsSuccess = (data = [], total) => ({\n    type: GET_POSTS_SUCCESS,\n    payload: {\n        data,\n        total\n    }\n});\n\nexport const getPostsFailure = err => ({\n    type: GET_POSTS_FAILURE,\n    error: err\n});\n\nexport const setPosts = (data = [], total = 0) => ({\n    type: SET_POSTS,\n    payload: {\n        data,\n        total\n    }\n});\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderRadiusCard\":\"var(--borderRadius)\",\"backgroundColor\":\"var(--backgroundColor)\",\"secondBackgroundColor\":\"var(--secondBackgroundColor)\",\"defaultPadding\":\"var(--defaultPadding)\",\"fontColor\":\"var(--fontColor)\",\"mainFontColor\":\"var(--mainFontColor)\",\"thirdFontColor\":\"var(--thirdFontColor)\",\"secondFontColor\":\"var(--secondFontColor)\",\"defaultBorderRadius\":\"var(--borderRadius)\",\"thirdBackgroundColor\":\"var(--thirdBackgroundColor)\",\"skeletonBackgroundColor\":\"var(--skeletonBackgroundColor)\",\"darkGrey_1\":\"var(--darkGrey_1)\",\"ligthgrey_2\":\"var(--ligthgrey_2)\",\"fontFamily\":\"Montserrat,sans-serif\"};","import { SHOW_GLOBAL_ERROR } from '../actions/app';\n\nconst initialState = {\n    showError: false,\n    status: null,\n    key: \"\"\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_GLOBAL_ERROR:\n            return {\n                ...state,\n                showError: action.payload.showError,\n                status: action.payload.status,\n                key: action.payload.key\n            };\n        default: return state;\n    }\n};","import { lazy } from \"react\";\nimport posts from \"../posts/routes\";\n\nconst EntryPoint = lazy(() => import(/* webpackChunkName: \"home\" */ './components/EntryPoint'));\n\nexport const innerRoutes = [\n    posts\n];\n\nconst home = {\n    path: '/',\n    Component: EntryPoint,\n    exact: false,\n    innerRoutes: [...innerRoutes]\n};\n\nexport default home;","import { CHANGE_CHILD_ROUTE, GO_BACK, CHANGE_TITLE_DESCRIPTION } from '../actions/config';\nimport { innerRoutes } from '../routes';\n\nconst initialState = {\n    fetching: false,\n    currentChildRoute: innerRoutes[0] || { title: {}, subTitle: {} },\n    goBack: false,\n    title: '',\n    subtitle: ''\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_CHILD_ROUTE: {\n            return {\n                ...state,\n                fetching: false,\n                currentChildRoute: action.payload ? action.payload.childRoute : innerRoutes[0]\n            };\n        }\n        case GO_BACK: {\n            return {\n                ...state,\n                goBack: action.payload.goBack,\n                route: action.payload.route\n            };\n        }\n        case CHANGE_TITLE_DESCRIPTION: {\n            return {\n                ...state,\n                title: action.payload.title,\n                subtitle: action.payload.subtitle\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport config from './config';\n\nexport default combineReducers({\n    config\n});","import { SET_VERSION, SET_THEME } from '../actions/config';\n\nconst initialState = {\n    version: null,\n    theme: 'light'\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_VERSION:\n            return {\n                ...state,\n                version: action.payload.version\n            };\n        case SET_THEME: {\n            return {\n                ...state,\n                theme: action.payload.theme\n            };\n        }\n        default: return state;\n    }\n};","import {\n    GET_POSTS_REQUEST,\n    GET_POSTS_SUCCESS,\n    GET_POSTS_FAILURE,\n    SET_POSTS\n} from '../actions/posts';\n\nconst initialState = {\n    fetching: false,\n    data: [],\n    total: 0\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_POSTS_REQUEST: {\n            return {\n                ...state,\n                fetching: true\n            };\n        }\n        case GET_POSTS_SUCCESS: {\n            return {\n                ...state,\n                fetching: false,\n                data: action.payload.data,\n                total:\n                (!action.payload.total || action.payload.total === 0) ? state.total : action.payload.total,\n            };\n        }\n      \n        case GET_POSTS_FAILURE: {\n            return {\n                ...state,\n                fetching: false\n            };\n        }\n        case SET_POSTS: {\n            return {\n                ...state,\n                data: action.payload.data,\n                total: action.payload.total\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n","import {\n    IS_READEN,\n} from '../actions/readStatus';\n\nconst initialState = {\n    arr:[]\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case IS_READEN: {\n            return {\n                ...state, \n                arr:[...state.arr, action.payload]\n            };\n        }\n      \n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport app from './app';\nimport home from '../../home/reducers';\nimport config from './config';\nimport posts from \"../../posts/reducers\";\nimport readStatus from \"../../readStatus/reducers\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: [\n        'app',\n        'home',\n        'posts',\n    ],\n    whitelist: [\n        'config',\n        'readStatus'\n    ]\n};\n\nconst rootReducer = combineReducers({\n    app,\n    home,\n    config,\n    posts,\n    readStatus\n});\n\nexport default persistReducer(persistConfig, rootReducer);","export const SHOW_GLOBAL_ERROR = 'SHOW_GLOBAL_ERROR';\n\nexport const showGlobalError = (showError, status, key) => ({\n    type: SHOW_GLOBAL_ERROR,\n    payload: {\n        showError,\n        status,\n        key\n    }\n});","import axios from 'axios';\nimport { redditDomain } from '../../app/conf';\nimport { makeQuery } from \"../../shared/helpers/commons\";\n\nexport const getPosts = (filters) =>\n    axios({\n        method: 'get',\n        url: `${redditDomain}/top.json?${makeQuery(filters)}`,\n        headers: {\n            notCachedResponse: true,\n            \"Access-Control-Allow-Origin\": \"*\"\n        },\n    });","import {  put, call, takeLatest } from 'redux-saga/effects';\nimport {\n    getPostsSuccess,\n    getPostsFailure,\n    GET_POSTS_REQUEST\n} from '../actions/posts';\nimport { getPosts } from '../services/posts';\nimport { showGlobalError } from '../../app/actions/app';\n\nconst getPostsWorker = function* ({ payload: { filters } }) {\n    try {\n\n        const { data: {data : {children}} } = yield call(getPosts, filters);\n\n        const total = 50;\n        yield put(getPostsSuccess(children, total));\n\n    } catch (err) {\n        yield put(showGlobalError(true, err));\n        yield put(getPostsFailure(err));\n    }\n};\n\nexport default [\n    takeLatest(GET_POSTS_REQUEST, getPostsWorker)\n];\n","import posts from './posts';\n\nexport default function* () {\n    yield* [\n        ...posts\n    ];\n}\n","import { all } from 'redux-saga/effects';\nimport posts from '../posts/sagas';\n\nexport default function* () {\n    yield all([\n        posts()\n    ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport persistedRootReducer from './reducers/root';\nimport rootSaga from './rootSaga';\n\nconst sagas = createSagaMiddleware();\n\nconst setMiddlewares = () => {\n    let middlewares = [sagas];\n\n    if (process.env.NODE_ENV === 'development') {\n        const logger = createLogger({ collapsed: true });\n\n        middlewares = [...middlewares, logger];\n    }\n\n    return middlewares;\n};\n\nconst store = createStore(\n    persistedRootReducer,\n    compose(\n        composeWithDevTools(\n            applyMiddleware(...setMiddlewares())\n        )\n    )\n);\n\nsagas.run(rootSaga);\n\nexport const persistedStore = persistStore(store);\n\nexport default store;","import React, { memo } from 'react';\nimport styles from './body.module.scss';\n\nconst Body = ({ children }) =>\n    <div className={styles.Body}>{children}</div>\n\nexport default memo(Body);","import { memo, useEffect } from 'react';\n\nconst ChangeTheme = ({ theme }) => {\n    useEffect(() => {\n        document.body.setAttribute('data-theme', theme);\n    }, [theme]);\n    return null;\n};\n\nexport default memo(ChangeTheme);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { themeSelector } from '../../../../selectors/config';\n\nimport ChangeTheme from './ChangeTheme';\n\nconst mapStateToProps = createStructuredSelector({\n    theme: themeSelector\n});\n\nexport default connect(mapStateToProps)(ChangeTheme);","import React, { memo } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ChangeTheme from './subComponents/ChangeTheme';\n\nconst Control = withRouter(({ children, history }) => {\n    return (\n        <>\n            <ChangeTheme />\n            {children}\n        </>\n    );\n});\n\nexport default memo(Control);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setVersion } from '../../actions/config';\nimport { versionSelector } from '../../selectors/config';\nimport Control from './Control';\n\nconst mapStateToProps = createStructuredSelector({\n    currentVersion: versionSelector\n});\n\nconst mapDispatchToProps = {\n    setVersion\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Control);","import home from '../home/routes';\n\nconst routes = [\n    home\n];\n\nexport default routes;","import React, { Suspense } from 'react';\nimport map from 'lodash/map';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport RouteWithSubRoutes from '../RouteWithSubRoutes/RouteWithSubRoutes';\nimport store, { persistedStore } from '../../store';\nimport Body from '../Body';\nimport Control from '../Control';\nimport routes from '../../routes';\nimport Loading from '../Loading';\n\nconst Root = () => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistedStore}>\n            <HashRouter>\n                <Control>\n                    <Body>\n                        <Suspense fallback={<Loading />}>\n                            <Switch>\n                                {map(routes, (route, index) => (\n                                    <RouteWithSubRoutes key={index} {...route} />\n                                ))}\n                            </Switch>\n                        </Suspense>\n                    </Body>\n                </Control>\n            </HashRouter>\n        </PersistGate>\n    </Provider>\n);\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './app/components/Root';\nimport './index.scss';\nimport './shared/styles/themeColors.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","export const SET_VERSION = 'SET_VERSION';\nexport const SET_THEME = 'SET_THEME';\n\nexport const setVersion = (version) => ({\n    type: SET_VERSION,\n    payload: {\n        version\n    }\n});\n\nexport const setThemeWeb = theme => ({\n    type: SET_THEME,\n    payload: {\n        theme\n    }\n});","export const CHANGE_CHILD_ROUTE = 'CHANGE_CHILD_ROUTE';\nexport const GO_BACK = 'GO_BACK';\n\nexport const CHANGE_TITLE_DESCRIPTION = 'CHANGE_TITLE_DESCRIPTION';\n\nexport const changeConfigChildRoute = (childRoute) => {\n    if (childRoute) {\n        return ({\n            type: CHANGE_CHILD_ROUTE,\n            payload: {\n                childRoute\n            }\n        })\n    } else {\n        return ({\n            type: CHANGE_CHILD_ROUTE\n        })\n    }\n};\n\nexport const changeGoBack = (goBack = false, route = \"\") => {\n    return {\n        type: GO_BACK,\n        payload: {\n            goBack,\n            route\n        }\n    }\n};\n\nexport const changeHomeTitleAndDescription = (title = \"\", subtitle = \"\") => {\n    return {\n        type: CHANGE_TITLE_DESCRIPTION,\n        payload: {\n            title,\n            subtitle\n        }\n    }\n};\n","import { createSelector } from 'reselect';\n\nconst getVersion = state => state.config.version;\nexport const getThemeSelector = state => state.config.theme;\n\nexport const versionSelector = createSelector(getVersion, state => state);\n\nexport const themeSelector = createSelector(getThemeSelector, theme => theme);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderRadiusCard\":\"var(--borderRadius)\",\"backgroundColor\":\"var(--backgroundColor)\",\"secondBackgroundColor\":\"var(--secondBackgroundColor)\",\"defaultPadding\":\"var(--defaultPadding)\",\"fontColor\":\"var(--fontColor)\",\"mainFontColor\":\"var(--mainFontColor)\",\"thirdFontColor\":\"var(--thirdFontColor)\",\"secondFontColor\":\"var(--secondFontColor)\",\"defaultBorderRadius\":\"var(--borderRadius)\",\"thirdBackgroundColor\":\"var(--thirdBackgroundColor)\",\"skeletonBackgroundColor\":\"var(--skeletonBackgroundColor)\",\"darkGrey_1\":\"var(--darkGrey_1)\",\"ligthgrey_2\":\"var(--ligthgrey_2)\",\"fontFamily\":\"Montserrat,sans-serif\",\"wrapper\":\"loading_wrapper__1oe5-\",\"loader\":\"loading_loader__1m0Qv\",\"theme\":\"loading_theme__3tUM9\"};","export const scrolly = (action, event) => {\n    let element = event.target;\n    if (element.scrollHeight - Math.ceil(element.scrollTop) === element.clientHeight) {\n        action();\n    }\n};\n\n\n\nexport const makeQuery = filters => {\n    if (!filters) return '';\n    return Object.keys(filters)\n        .reduce(function (a, k) {\n            a.push(k + '=' + encodeURIComponent(filters[k].toString().trim()));\n            return a;\n        }, [])\n        .join('&');\n};\n\nexport const buildArrayLength = length => {\n    let l = [];\n    for (let index = 0; index < length; index++) {\n        l.push(index);\n    }\n    return l;\n};","import { lazy } from \"react\";\nimport { postsSVG } from '../shared/helpers/icons';\n\nconst EntryPoint = lazy(() => import( /* webpackChunkName: \"posts\" */ './components/EntryPoint'));\nconst PostsLoader = lazy(() => import( /* webpackChunkName: \"PostsLoader\" */ './components/PostsLoader'));\n\nexport const defaultPath = '/posts';\n\nexport const innerRoutes = [\n    {\n        path: `${defaultPath}/`,\n        Component: PostsLoader,\n        exact: true,\n        icon: postsSVG,\n        title: {\n            key: \"Reddit Posts\",\n            plural: false\n        },\n        subTitle: {\n            key: 'posts',\n            plural: false\n        }\n    },\n];\n\nconst posts = {\n    path: defaultPath,\n    Component: EntryPoint,\n    exact: false,\n    icon: postsSVG,\n    title: {\n        key: 'Reddit Posts',\n        plural: false\n    },\n    subTitle: {\n        key: 'Top 50 Posts of reddit.com/top',\n        plural: false\n    },\n    innerRoutes: innerRoutes\n};\n\nexport default posts;\n","export const postsSVG = \"./assets/icons/posts.svg\"\n","import React, { memo } from 'react';\nimport { Route } from 'react-router-dom';\n\nconst RouteWithSubRoutes = memo(({ Component, exact, path, innerRoutes }) => (\n    <Route exact={exact} path={path} render={renderProps => <Component {...renderProps} innerRoutes={innerRoutes} />} />\n));\n\nexport default RouteWithSubRoutes;","export const IS_READEN = 'IS_READEN';\n\nexport const postIsReaden = (id) => ({\n    type: IS_READEN,\n    payload:  id\n\n});","export const dev = process.env.NODE_ENV === 'development';\n\nexport const redditDomain = 'https://api.reddit.com';\n\nexport const redditApiKey = 'aweskfhh3w94ht023hgv30245hg458v459uvn24v524v05vj034v';\n\nexport const defaultPage = 1;\n\nexport const defaultLimit = 10;","import React, { memo } from 'react';\nimport Loader from 'react-loader-spinner';\nimport styles from './loading.module.scss';\n\nconst Loading = ({ theme = false }) => (\n    <div className={styles.wrapper}>\n        <Loader type=\"ThreeDots\" className={`${styles.loader} ${theme && styles.theme}`} />\n    </div>\n);\n\nexport default memo(Loading);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderRadiusCard\":\"var(--borderRadius)\",\"backgroundColor\":\"var(--backgroundColor)\",\"secondBackgroundColor\":\"var(--secondBackgroundColor)\",\"defaultPadding\":\"var(--defaultPadding)\",\"fontColor\":\"var(--fontColor)\",\"mainFontColor\":\"var(--mainFontColor)\",\"thirdFontColor\":\"var(--thirdFontColor)\",\"secondFontColor\":\"var(--secondFontColor)\",\"defaultBorderRadius\":\"var(--borderRadius)\",\"thirdBackgroundColor\":\"var(--thirdBackgroundColor)\",\"skeletonBackgroundColor\":\"var(--skeletonBackgroundColor)\",\"darkGrey_1\":\"var(--darkGrey_1)\",\"ligthgrey_2\":\"var(--ligthgrey_2)\",\"fontFamily\":\"Montserrat,sans-serif\",\"Body\":\"body_Body__1m5Sj\"};"],"sourceRoot":""}